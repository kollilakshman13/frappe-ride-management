{
 "accept_payment": 0,
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "amount": 0.0,
 "amount_based_on_field": 0,
 "apply_document_permissions": 0,
 "breadcrumbs": "",
 "button_label": "Book Now",
 "client_script": "// Example for handling field conditions in a custom web form\r\n\r\nconst captchaText = document.getElementById('captcha-text');\r\nconst captchaInput = document.getElementById('captcha-input');\r\nconst refreshCaptchaButton = document.getElementById('refresh-captcha');\r\nconst submitFormButton = document.getElementById('submit-form');\r\n\r\n// Function to generate random captcha\r\nfunction generateCaptcha() {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let captcha = '';\r\n    for (let i = 0; i < 6; i++) {\r\n        captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return captcha;\r\n}\r\n\r\n// Function to refresh captcha\r\nfunction refreshCaptcha() {\r\n    captchaText.textContent = generateCaptcha();\r\n    captchaInput.value = ''; // Clear the captcha input field\r\n}\r\n\r\n// Refresh captcha initially and set interval for auto refresh\r\nrefreshCaptcha();\r\n//setInterval(refreshCaptcha, 30000);\r\n\r\n// Event listener for refresh button click\r\nrefreshCaptchaButton.addEventListener('click', refreshCaptcha);\r\n\r\n// Event listener for form submission\r\nsubmitFormButton.addEventListener('click', function() {\r\n    // Verify captcha\r\n    if (captchaInput.value === captchaText.textContent) {\r\n        // Optional: Disable form submission button to prevent double submission\r\n        submitFormButton.disabled = true;\r\n\r\n        // Save the document using Frappe's web_form.save() method\r\n        frappe.web_form.save().then((r) => {\r\n            if (!r.exc) {\r\n                // Success message\r\n                alert('Document saved successfully!');\r\n                window.location.href = '/desk#Form/YourDoctype/' + r.doc.name;\r\n                // Reset form fields and refresh captcha\r\n                refreshCaptcha();\r\n                document.getElementById('apply-form').reset();\r\n\r\n                // Enable submit button after resetting\r\n                submitFormButton.disabled = false;\r\n            } else {\r\n                // Error message\r\n                alert('Error: ' + r.exc);\r\n                submitFormButton.disabled = false; // Re-enable the button on error\r\n            }\r\n        }).catch((error) => {\r\n            console.error('Error saving document:', error);\r\n            alert('An error occurred while saving the document. Please try again.');\r\n            submitFormButton.disabled = false; // Re-enable the button on error\r\n        });\r\n    } else {\r\n        alert('CAPTCHA verification failed. Please try again.');\r\n        refreshCaptcha();\r\n    }\r\n    \r\n});\r\n\r\n\r\nfrappe.web_form.on('state', (field, value) => {\r\n    update_city_options(value);\r\n});\r\n\r\n// Event handler for when the 'vehicle' field value changes\r\nfrappe.web_form.on('vehicle', (field, value) => {\r\n    update_rate(value);\r\n});\r\n\r\n// Event handler for when the 'distance' field value changes\r\nfrappe.web_form.on('distance', (field, value) => {\r\n    calculate_total_amount();\r\n});\r\n\r\n\r\n// Event handler for after the web form has loaded\r\nfrappe.web_form.after_load = () => {\r\n    let state = frappe.web_form.get_value('state');\r\n    update_city_options(state);\r\n    \r\n    let vehicle = frappe.web_form.get_value('vehicle');\r\n    update_rate(vehicle);\r\n\r\n    calculate_total_amount();\r\n};\r\n\r\n// Function to update city options based on selected state\r\nfunction update_city_options(state) {\r\n    let city_field = frappe.web_form.get_field('city');\r\n    let city_options = [];\r\n\r\n    // Setting city options based on state value\r\n    if (state == 'Maharashtra') {\r\n        city_options = ['Mumbai', 'Pune'];\r\n    } else if (state == 'Telangana') {\r\n        city_options = ['Hyderabad', 'Warangal'];\r\n    } else if (state == 'Karnataka') {\r\n        city_options = ['Bangalore', 'Mysore'];\r\n    }\r\n\r\n    // Update the city field options and refresh the field\r\n    city_field.df.options = city_options;\r\n    city_field.refresh();\r\n\r\n    // Clear the city field if the current value is not valid for the selected state\r\n    let current_city = frappe.web_form.get_value('city');\r\n    if (!city_options.includes(current_city)) {\r\n        frappe.web_form.set_value('city', '');\r\n    }\r\n}\r\n\r\n// Function to update rate based on selected vehicle\r\nfunction update_rate(vehicle) {\r\n    if (vehicle == 'Car0001') {\r\n        frappe.web_form.set_value('rate', 10);\r\n    } else if(vehicle =='Car0002') {\r\n        frappe.web_form.set_value('rate', '20');\r\n    }else if(vehicle =='Honda') {\r\n        frappe.web_form.set_value('rate', '30');\r\n    }else if(vehicle =='Mercedes-Benz') {\r\n        frappe.web_form.set_value('rate', '40');\r\n    }else if(vehicle =='Audi') {\r\n        frappe.web_form.set_value('rate', '25');\r\n    }\r\n}\r\n\r\n// Function to calculate total amount based on distance and rate\r\nfunction calculate_total_amount() {\r\n    let distance = frappe.web_form.get_value('distance');\r\n    let rate = frappe.web_form.get_value('rate');\r\n\r\n    if (distance && rate) {\r\n        let total_amount = distance * rate;\r\n        frappe.web_form.set_value('total_amount', total_amount);\r\n    } else {\r\n        frappe.web_form.set_value('total_amount', '');\r\n    }\r\n}  \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n// Event handler for form load\r\nfrappe.web_form.on('load', function(frm) {\r\n    render_filter_table();\r\n});\r\n\r\n// Event handler for refreshing the form\r\nfrappe.web_form.on('refresh', function(frm) {\r\n    render_filter_table();\r\n});\r\n\r\n// Event handler for form validation\r\nfrappe.web_form.on('validate', function(frm) {\r\n    update_filters_json();\r\n});\r\n\r\n// Event handler for adding a new row\r\nfrappe.web_form.on('click', '#add-row', function() {\r\n    add_filter_row();\r\n});\r\n\r\n// Event handler for removing a row\r\nfrappe.web_form.on('click', '.remove-row', function() {\r\n    $(this).closest('tr').remove();\r\n    update_filters_json();\r\n});\r\n\r\n// Event handler for changing filter field to update possible values\r\nfrappe.web_form.on('change', '.filter-name', function() {\r\n    let $row = $(this).closest('tr');\r\n    update_value_select_options($row);\r\n});\r\n\r\nfunction render_filter_table() {\r\n    let html = `\r\n        <table id=\"filter-table\" class=\"table table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Filter</th>\r\n                    <th>Condition</th>\r\n                    <th>Value</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                ${render_existing_filters()}\r\n            </tbody>\r\n        </table>\r\n        <button type=\"button\" id=\"add-row\" class=\"btn btn-primary\">Add Row</button>\r\n    `;\r\n\r\n    // Set HTML content to the appropriate field wrapper\r\n    $('#filters_json').html(html);\r\n}\r\n\r\nfunction render_existing_filters() {\r\n    let filters = JSON.parse(frappe.web_form.doc.filters_json || '[]');\r\n    return filters.map(filter => `\r\n        <tr>\r\n            <td>${render_filter_select(filter.fieldname)}</td>\r\n            <td>\r\n                <select class=\"form-control condition\">\r\n                    <option value=\"=\" ${filter.condition === '=' ? 'selected' : ''}>=</option>\r\n                    <option value=\"!=\" ${filter.condition === '!=' ? 'selected' : ''}>&#x2260;</option>\r\n                    <option value=\">\" ${filter.condition === '>' ? 'selected' : ''}>&gt;</option>\r\n                    <option value=\"<\" ${filter.condition === '<' ? 'selected' : ''}>&lt;</option>\r\n                </select>\r\n            </td>\r\n            <td>${render_value_select(filter.fieldname, filter.value)}</td>\r\n            <td><button type=\"button\" class=\"btn btn-danger remove-row\">Remove</button></td>\r\n        </tr>\r\n    `).join('');\r\n}\r\n\r\nfunction render_filter_select(selected_fieldname) {\r\n    let options = frappe.web_form.meta.fields.map(field => `\r\n        <option value=\"${field.fieldname}\" ${field.fieldname === selected_fieldname ? 'selected' : ''}>${field.label}</option>\r\n    `).join('');\r\n    return `<select class=\"form-control filter-name\"><option value=\"\">Select Filter</option>${options}</select>`;\r\n}\r\n\r\nfunction render_value_select(fieldname, selected_value) {\r\n    let field = frappe.web_form.meta.fields.find(field => field.fieldname === fieldname);\r\n    if (field) {\r\n        if (field.options && field.fieldtype !== 'Link') {\r\n            let options = field.options.split('\\n').map(option => `\r\n                <option value=\"${option}\" ${option === selected_value ? 'selected' : ''}>${option}</option>\r\n            `).join('');\r\n            return `<select class=\"form-control value\">${options}</select>`;\r\n        } else if (field.fieldtype === 'Link') {\r\n            return `<select class=\"form-control value\"><option value=\"\">Loading...</option></select>`;\r\n        }\r\n    }\r\n    return `<input type=\"text\" class=\"form-control value\" value=\"${selected_value || ''}\">`;\r\n}\r\n\r\nfunction update_value_select_options($row) {\r\n    let fieldname = $row.find('.filter-name').val();\r\n    let valueField = $row.find('.value');\r\n    let field = frappe.web_form.meta.fields.find(field => field.fieldname === fieldname);\r\n\r\n    if (field) {\r\n        if (field.options && field.fieldtype !== 'Link') {\r\n            let options = field.options.split('\\n').map(option => `\r\n                <option value=\"${option}\">${option}</option>\r\n            `).join('');\r\n            let valueSelect = `<select class=\"form-control value\">${options}</select>`;\r\n            valueField.replaceWith(valueSelect);\r\n        } else if (field.fieldtype === 'Link') {\r\n            // Replace with your custom logic for Link field options loading\r\n            // Example placeholder\r\n            let valueSelect = `<select class=\"form-control value\"><option value=\"\">Loading...</option></select>`;\r\n            valueField.replaceWith(valueSelect);\r\n        } else {\r\n            let valueInput = `<input type=\"text\" class=\"form-control value\">`;\r\n            valueField.replaceWith(valueInput);\r\n        }\r\n    } else {\r\n        let valueInput = `<input type=\"text\" class=\"form-control value\">`;\r\n        valueField.replaceWith(valueInput);\r\n    }\r\n}\r\n\r\nfunction add_filter_row() {\r\n    let newRow = `\r\n        <tr>\r\n            <td>${render_filter_select('')}</td>\r\n            <td>\r\n                <select class=\"form-control condition\">\r\n                    <option value=\"=\">=</option>\r\n                    <option value=\"!=\">&#x2260;</option>\r\n                    <option value=\">\">&gt;</option>\r\n                    <option value=\"<\">&lt;</option>\r\n                </select>\r\n            </td>\r\n            <td><input type=\"text\" class=\"form-control value\"></td>\r\n            <td><button type=\"button\" class=\"btn btn-danger remove-row\">Remove</button></td>\r\n        </tr>\r\n    `;\r\n\r\n    // Append new row to the table\r\n    $('#filter-table tbody').append(newRow);\r\n\r\n    // Update value select options for the new row\r\n    let $lastRow = $('#filter-table tbody tr').last();\r\n    update_value_select_options($lastRow);\r\n}\r\n\r\nfunction update_filters_json() {\r\n    let filters = [];\r\n    $('#filter-table tbody tr').each(function() {\r\n        let filter_name = $(this).find('.filter-name').val();\r\n        let condition = $(this).find('.condition').val();\r\n        let value = $(this).find('.value').val();\r\n\r\n        if (filter_name && condition && value) {\r\n            filters.push({\r\n                fieldname: filter_name,\r\n                condition: condition,\r\n                value: value\r\n            });\r\n        }\r\n    });\r\n\r\n    // Set the value of 'filters_json' field\r\n    frappe.web_form.set_value('filters_json', JSON.stringify(filters));\r\n}\r\n",
 "creation": "2024-02-23 12:26:33.392860",
 "currency": "INR",
 "custom_css": "\r\n\r\n.captcha {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n}\r\n#captcha-text {\r\n    font-size: 20px;\r\n    background-color: #eee;\r\n    padding: 5px 10px;\r\n    margin-right: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 3px;\r\n}\r\n#refresh-captcha {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    border-radius: 10px; /* Rounded corners */\r\n    border: 1px solid #ccc; /* Border */\r\n    transition: background-color 0.3s ease; /* Smooth hover effect */\r\n}\r\n#captcha-input {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 3px;\r\n    margin-bottom: 10px;\r\n    font-size:16px;\r\n}\r\n.btn-primary {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n}\r\n\r\n.button1 {\r\n    background-color:#EE502D;\r\n    width:100px;\r\n    font-size:18px;\r\n    min-height:30px;\r\n    color:white;\r\n    border:none;\r\n    cursor: pointer;\r\n    border-radius: 20px; \r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.web-form-actions .btn-primary {\r\n    display:none;\r\n}\r\n.web-form-actions .btn-light {\r\n    background-color:#EE502D;\r\n    color:white;\r\n}\r\n.web-form-footer{\r\n    display:none;\r\n}\r\n.form-page{\r\n    padding:10px;\r\n} \r\n.form-group {\r\n    /*color:#ee502D;*/\r\n    font-size:14px;\r\n    font-weight:bold;\r\n}\r\n.control-label{\r\n    /*color:#EE502D;*/\r\n    font-size:16px;\r\n    font-weight:bold;\r\n}\r\n.control-input {\r\n    font-size:14px;\r\n}\r\n.page_content {\r\n    width: 100%; /* Adjust as needed */\r\n    /*background-image: url(\"/files/mlp-img-ext-2023-gle.png\");*/\r\n    /*background-size: cover;*/\r\n    /*background-repeat: no-repeat;*/\r\n    /*background-position: center;*/\r\n}\r\n\r\n",
 "doc_type": "Ride order",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "is_multi_step_form": 0,
 "is_standard": 1,
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2024-06-26 11:49:08.160126",
 "modified_by": "Administrator",
 "module": "Ride Management",
 "name": "book-a-ride",
 "owner": "kollilakshman13@gmail.com",
 "payment_button_label": "Buy Now",
 "published": 1,
 "route": "book",
 "route_to_success_link": 0,
 "show_attachments": 0,
 "show_in_grid": 0,
 "show_sidebar": 0,
 "sidebar_items": [],
 "success_message": "\"Your ride order has been successfully completed.\"",
 "success_url": "/book-a-ride",
 "title": "Book A Ride",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "vehicle",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Vehicle",
   "max_length": 0,
   "max_value": 0,
   "options": "Vehicles",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "customer_name",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Customer Name",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "state",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "State",
   "max_length": 0,
   "max_value": 0,
   "options": "\nKarnataka\nMaharashtra\nTelangana",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "depends_on": "state",
   "fieldname": "city",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "City",
   "max_length": 0,
   "max_value": 0,
   "options": "\nBangalore\nMysore\nMumbai\nPune\nHyderabad\nWarnagal",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "pick",
   "fieldtype": "Small Text",
   "hidden": 0,
   "label": "pick",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "",
   "fieldtype": "Column Break",
   "hidden": 0,
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "default": "New",
   "fieldname": "status",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Status",
   "max_length": 0,
   "max_value": 0,
   "options": "New\nAccept\nReject",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "phone",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Phone ",
   "max_length": 0,
   "max_value": 0,
   "options": "Phone",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "distance",
   "fieldtype": "Float",
   "hidden": 0,
   "label": "Distance",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "rate",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Rate(km per)",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "total_amount",
   "fieldtype": "Float",
   "hidden": 0,
   "label": "Total Amount",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "",
   "fieldtype": "Section Break",
   "hidden": 0,
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "custom_html",
   "fieldtype": "HTML",
   "hidden": 0,
   "label": "Custom HTML",
   "max_length": 0,
   "max_value": 0,
   "options": "<div class=\"web-form mt-5\">\n  \n        <form id=\"apply-form\" method=\"post\">\n            <div class=\"form-group\">\n                <label for=\"captcha-text\">CAPTCHA: </label>\n                <span id=\"captcha-text\">ABCD12</span>\n                 <button id=\"refresh-captcha\" type=\"button\">\n                     <i class=\"fas fa-sync-alt\"></i> \n                 </button>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"captcha-input\">Enter CAPTCHA: </label>\n                <input id=\"captcha-input\" required type=\"text\">\n            </div>\n            <div class=\"form-actions\">\n               \n                <button class=\"button1\" id=\"submit-form\" type=\"button\">Save \n                    </button>\n            </div>\n        </form>\n    </div>",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  }
 ]
}